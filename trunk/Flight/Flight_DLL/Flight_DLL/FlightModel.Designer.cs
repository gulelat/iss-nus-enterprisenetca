//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("FlightDBModel", "FK_Route_Destination", "Destination", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Flight_DAL.Destination), "Route", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flight_DAL.Route), true)]
[assembly: EdmRelationshipAttribute("FlightDBModel", "FK_Route_Destination1", "Destination", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Flight_DAL.Destination), "Route", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flight_DAL.Route), true)]
[assembly: EdmRelationshipAttribute("FlightDBModel", "FK_Route_Flight", "Flight", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Flight_DAL.Flight), "Route", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flight_DAL.Route), true)]
[assembly: EdmRelationshipAttribute("FlightDBModel", "FK_Passenger_Reservation", "Reservation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Flight_DAL.Reservation), "Passenger", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flight_DAL.Passenger), true)]
[assembly: EdmRelationshipAttribute("FlightDBModel", "FK_Reservation_Route", "Route", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Flight_DAL.Route), "Reservation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flight_DAL.Reservation), true)]

#endregion

namespace Flight_DAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class FlightDBEntities1 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new FlightDBEntities1 object using the connection string found in the 'FlightDBEntities1' section of the application configuration file.
        /// </summary>
        public FlightDBEntities1() : base("name=FlightDBEntities1", "FlightDBEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FlightDBEntities1 object.
        /// </summary>
        public FlightDBEntities1(string connectionString) : base(connectionString, "FlightDBEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FlightDBEntities1 object.
        /// </summary>
        public FlightDBEntities1(EntityConnection connection) : base(connection, "FlightDBEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Destination> Destinations
        {
            get
            {
                if ((_Destinations == null))
                {
                    _Destinations = base.CreateObjectSet<Destination>("Destinations");
                }
                return _Destinations;
            }
        }
        private ObjectSet<Destination> _Destinations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Flight> Flights
        {
            get
            {
                if ((_Flights == null))
                {
                    _Flights = base.CreateObjectSet<Flight>("Flights");
                }
                return _Flights;
            }
        }
        private ObjectSet<Flight> _Flights;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Passenger> Passengers
        {
            get
            {
                if ((_Passengers == null))
                {
                    _Passengers = base.CreateObjectSet<Passenger>("Passengers");
                }
                return _Passengers;
            }
        }
        private ObjectSet<Passenger> _Passengers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Route> Routes
        {
            get
            {
                if ((_Routes == null))
                {
                    _Routes = base.CreateObjectSet<Route>("Routes");
                }
                return _Routes;
            }
        }
        private ObjectSet<Route> _Routes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Reservation> Reservations
        {
            get
            {
                if ((_Reservations == null))
                {
                    _Reservations = base.CreateObjectSet<Reservation>("Reservations");
                }
                return _Reservations;
            }
        }
        private ObjectSet<Reservation> _Reservations;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Destinations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDestinations(Destination destination)
        {
            base.AddObject("Destinations", destination);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Flights EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFlights(Flight flight)
        {
            base.AddObject("Flights", flight);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Passengers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPassengers(Passenger passenger)
        {
            base.AddObject("Passengers", passenger);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Routes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoutes(Route route)
        {
            base.AddObject("Routes", route);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Reservations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReservations(Reservation reservation)
        {
            base.AddObject("Reservations", reservation);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlightDBModel", Name="Destination")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Destination : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Destination object.
        /// </summary>
        /// <param name="cityCode">Initial value of the CityCode property.</param>
        /// <param name="city">Initial value of the City property.</param>
        public static Destination CreateDestination(global::System.String cityCode, global::System.String city)
        {
            Destination destination = new Destination();
            destination.CityCode = cityCode;
            destination.City = city;
            return destination;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CityCode
        {
            get
            {
                return _CityCode;
            }
            set
            {
                if (_CityCode != value)
                {
                    OnCityCodeChanging(value);
                    ReportPropertyChanging("CityCode");
                    _CityCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CityCode");
                    OnCityCodeChanged();
                }
            }
        }
        private global::System.String _CityCode;
        partial void OnCityCodeChanging(global::System.String value);
        partial void OnCityCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlightDBModel", "FK_Route_Destination", "Route")]
        public EntityCollection<Route> Routes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Route>("FlightDBModel.FK_Route_Destination", "Route");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Route>("FlightDBModel.FK_Route_Destination", "Route", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlightDBModel", "FK_Route_Destination1", "Route")]
        public EntityCollection<Route> Routes1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Route>("FlightDBModel.FK_Route_Destination1", "Route");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Route>("FlightDBModel.FK_Route_Destination1", "Route", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlightDBModel", Name="Flight")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Flight : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Flight object.
        /// </summary>
        /// <param name="flightID">Initial value of the FlightID property.</param>
        /// <param name="capacity">Initial value of the Capacity property.</param>
        public static Flight CreateFlight(global::System.String flightID, global::System.Int32 capacity)
        {
            Flight flight = new Flight();
            flight.FlightID = flightID;
            flight.Capacity = capacity;
            return flight;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FlightID
        {
            get
            {
                return _FlightID;
            }
            set
            {
                if (_FlightID != value)
                {
                    OnFlightIDChanging(value);
                    ReportPropertyChanging("FlightID");
                    _FlightID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FlightID");
                    OnFlightIDChanged();
                }
            }
        }
        private global::System.String _FlightID;
        partial void OnFlightIDChanging(global::System.String value);
        partial void OnFlightIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Capacity
        {
            get
            {
                return _Capacity;
            }
            set
            {
                OnCapacityChanging(value);
                ReportPropertyChanging("Capacity");
                _Capacity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Capacity");
                OnCapacityChanged();
            }
        }
        private global::System.Int32 _Capacity;
        partial void OnCapacityChanging(global::System.Int32 value);
        partial void OnCapacityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlightDBModel", "FK_Route_Flight", "Route")]
        public EntityCollection<Route> Routes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Route>("FlightDBModel.FK_Route_Flight", "Route");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Route>("FlightDBModel.FK_Route_Flight", "Route", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlightDBModel", Name="Passenger")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Passenger : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Passenger object.
        /// </summary>
        /// <param name="passengerID">Initial value of the PassengerID property.</param>
        /// <param name="passengerName">Initial value of the PassengerName property.</param>
        /// <param name="passportNo">Initial value of the PassportNo property.</param>
        /// <param name="expiryDate">Initial value of the ExpiryDate property.</param>
        /// <param name="reservationID">Initial value of the ReservationID property.</param>
        public static Passenger CreatePassenger(global::System.Int32 passengerID, global::System.String passengerName, global::System.String passportNo, global::System.DateTime expiryDate, global::System.String reservationID)
        {
            Passenger passenger = new Passenger();
            passenger.PassengerID = passengerID;
            passenger.PassengerName = passengerName;
            passenger.PassportNo = passportNo;
            passenger.ExpiryDate = expiryDate;
            passenger.ReservationID = reservationID;
            return passenger;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PassengerID
        {
            get
            {
                return _PassengerID;
            }
            set
            {
                if (_PassengerID != value)
                {
                    OnPassengerIDChanging(value);
                    ReportPropertyChanging("PassengerID");
                    _PassengerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PassengerID");
                    OnPassengerIDChanged();
                }
            }
        }
        private global::System.Int32 _PassengerID;
        partial void OnPassengerIDChanging(global::System.Int32 value);
        partial void OnPassengerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PassengerName
        {
            get
            {
                return _PassengerName;
            }
            set
            {
                OnPassengerNameChanging(value);
                ReportPropertyChanging("PassengerName");
                _PassengerName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PassengerName");
                OnPassengerNameChanged();
            }
        }
        private global::System.String _PassengerName;
        partial void OnPassengerNameChanging(global::System.String value);
        partial void OnPassengerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PassportNo
        {
            get
            {
                return _PassportNo;
            }
            set
            {
                OnPassportNoChanging(value);
                ReportPropertyChanging("PassportNo");
                _PassportNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PassportNo");
                OnPassportNoChanged();
            }
        }
        private global::System.String _PassportNo;
        partial void OnPassportNoChanging(global::System.String value);
        partial void OnPassportNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExpiryDate
        {
            get
            {
                return _ExpiryDate;
            }
            set
            {
                OnExpiryDateChanging(value);
                ReportPropertyChanging("ExpiryDate");
                _ExpiryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpiryDate");
                OnExpiryDateChanged();
            }
        }
        private global::System.DateTime _ExpiryDate;
        partial void OnExpiryDateChanging(global::System.DateTime value);
        partial void OnExpiryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReservationID
        {
            get
            {
                return _ReservationID;
            }
            set
            {
                OnReservationIDChanging(value);
                ReportPropertyChanging("ReservationID");
                _ReservationID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReservationID");
                OnReservationIDChanged();
            }
        }
        private global::System.String _ReservationID;
        partial void OnReservationIDChanging(global::System.String value);
        partial void OnReservationIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlightDBModel", "FK_Passenger_Reservation", "Reservation")]
        public Reservation Reservation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reservation>("FlightDBModel.FK_Passenger_Reservation", "Reservation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reservation>("FlightDBModel.FK_Passenger_Reservation", "Reservation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Reservation> ReservationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reservation>("FlightDBModel.FK_Passenger_Reservation", "Reservation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Reservation>("FlightDBModel.FK_Passenger_Reservation", "Reservation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlightDBModel", Name="Reservation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Reservation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Reservation object.
        /// </summary>
        /// <param name="reservationID">Initial value of the ReservationID property.</param>
        /// <param name="routeID">Initial value of the RouteID property.</param>
        /// <param name="reservationDate">Initial value of the ReservationDate property.</param>
        /// <param name="flightDate">Initial value of the FlightDate property.</param>
        public static Reservation CreateReservation(global::System.String reservationID, global::System.Int32 routeID, global::System.DateTime reservationDate, global::System.DateTime flightDate)
        {
            Reservation reservation = new Reservation();
            reservation.ReservationID = reservationID;
            reservation.RouteID = routeID;
            reservation.ReservationDate = reservationDate;
            reservation.FlightDate = flightDate;
            return reservation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReservationID
        {
            get
            {
                return _ReservationID;
            }
            set
            {
                if (_ReservationID != value)
                {
                    OnReservationIDChanging(value);
                    ReportPropertyChanging("ReservationID");
                    _ReservationID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ReservationID");
                    OnReservationIDChanged();
                }
            }
        }
        private global::System.String _ReservationID;
        partial void OnReservationIDChanging(global::System.String value);
        partial void OnReservationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RouteID
        {
            get
            {
                return _RouteID;
            }
            set
            {
                OnRouteIDChanging(value);
                ReportPropertyChanging("RouteID");
                _RouteID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RouteID");
                OnRouteIDChanged();
            }
        }
        private global::System.Int32 _RouteID;
        partial void OnRouteIDChanging(global::System.Int32 value);
        partial void OnRouteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ReservationDate
        {
            get
            {
                return _ReservationDate;
            }
            set
            {
                OnReservationDateChanging(value);
                ReportPropertyChanging("ReservationDate");
                _ReservationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReservationDate");
                OnReservationDateChanged();
            }
        }
        private global::System.DateTime _ReservationDate;
        partial void OnReservationDateChanging(global::System.DateTime value);
        partial void OnReservationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FlightDate
        {
            get
            {
                return _FlightDate;
            }
            set
            {
                OnFlightDateChanging(value);
                ReportPropertyChanging("FlightDate");
                _FlightDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FlightDate");
                OnFlightDateChanged();
            }
        }
        private global::System.DateTime _FlightDate;
        partial void OnFlightDateChanging(global::System.DateTime value);
        partial void OnFlightDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlightDBModel", "FK_Passenger_Reservation", "Passenger")]
        public EntityCollection<Passenger> Passengers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Passenger>("FlightDBModel.FK_Passenger_Reservation", "Passenger");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Passenger>("FlightDBModel.FK_Passenger_Reservation", "Passenger", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlightDBModel", "FK_Reservation_Route", "Route")]
        public Route Route
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Route>("FlightDBModel.FK_Reservation_Route", "Route").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Route>("FlightDBModel.FK_Reservation_Route", "Route").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Route> RouteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Route>("FlightDBModel.FK_Reservation_Route", "Route");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Route>("FlightDBModel.FK_Reservation_Route", "Route", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlightDBModel", Name="Route")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Route : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Route object.
        /// </summary>
        /// <param name="routeID">Initial value of the RouteID property.</param>
        /// <param name="flightID">Initial value of the FlightID property.</param>
        /// <param name="flightTime">Initial value of the FlightTime property.</param>
        /// <param name="startCity">Initial value of the StartCity property.</param>
        /// <param name="endCity">Initial value of the EndCity property.</param>
        /// <param name="adultFare">Initial value of the AdultFare property.</param>
        /// <param name="childFare">Initial value of the ChildFare property.</param>
        public static Route CreateRoute(global::System.Int32 routeID, global::System.String flightID, global::System.String flightTime, global::System.String startCity, global::System.String endCity, global::System.Single adultFare, global::System.Single childFare)
        {
            Route route = new Route();
            route.RouteID = routeID;
            route.FlightID = flightID;
            route.FlightTime = flightTime;
            route.StartCity = startCity;
            route.EndCity = endCity;
            route.AdultFare = adultFare;
            route.ChildFare = childFare;
            return route;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RouteID
        {
            get
            {
                return _RouteID;
            }
            set
            {
                if (_RouteID != value)
                {
                    OnRouteIDChanging(value);
                    ReportPropertyChanging("RouteID");
                    _RouteID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RouteID");
                    OnRouteIDChanged();
                }
            }
        }
        private global::System.Int32 _RouteID;
        partial void OnRouteIDChanging(global::System.Int32 value);
        partial void OnRouteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FlightID
        {
            get
            {
                return _FlightID;
            }
            set
            {
                OnFlightIDChanging(value);
                ReportPropertyChanging("FlightID");
                _FlightID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FlightID");
                OnFlightIDChanged();
            }
        }
        private global::System.String _FlightID;
        partial void OnFlightIDChanging(global::System.String value);
        partial void OnFlightIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FlightTime
        {
            get
            {
                return _FlightTime;
            }
            set
            {
                OnFlightTimeChanging(value);
                ReportPropertyChanging("FlightTime");
                _FlightTime = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FlightTime");
                OnFlightTimeChanged();
            }
        }
        private global::System.String _FlightTime;
        partial void OnFlightTimeChanging(global::System.String value);
        partial void OnFlightTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StartCity
        {
            get
            {
                return _StartCity;
            }
            set
            {
                OnStartCityChanging(value);
                ReportPropertyChanging("StartCity");
                _StartCity = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StartCity");
                OnStartCityChanged();
            }
        }
        private global::System.String _StartCity;
        partial void OnStartCityChanging(global::System.String value);
        partial void OnStartCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EndCity
        {
            get
            {
                return _EndCity;
            }
            set
            {
                OnEndCityChanging(value);
                ReportPropertyChanging("EndCity");
                _EndCity = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EndCity");
                OnEndCityChanged();
            }
        }
        private global::System.String _EndCity;
        partial void OnEndCityChanging(global::System.String value);
        partial void OnEndCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single AdultFare
        {
            get
            {
                return _AdultFare;
            }
            set
            {
                OnAdultFareChanging(value);
                ReportPropertyChanging("AdultFare");
                _AdultFare = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdultFare");
                OnAdultFareChanged();
            }
        }
        private global::System.Single _AdultFare;
        partial void OnAdultFareChanging(global::System.Single value);
        partial void OnAdultFareChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single ChildFare
        {
            get
            {
                return _ChildFare;
            }
            set
            {
                OnChildFareChanging(value);
                ReportPropertyChanging("ChildFare");
                _ChildFare = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChildFare");
                OnChildFareChanged();
            }
        }
        private global::System.Single _ChildFare;
        partial void OnChildFareChanging(global::System.Single value);
        partial void OnChildFareChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlightDBModel", "FK_Route_Destination", "Destination")]
        public Destination Destination
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Destination>("FlightDBModel.FK_Route_Destination", "Destination").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Destination>("FlightDBModel.FK_Route_Destination", "Destination").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Destination> DestinationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Destination>("FlightDBModel.FK_Route_Destination", "Destination");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Destination>("FlightDBModel.FK_Route_Destination", "Destination", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlightDBModel", "FK_Route_Destination1", "Destination")]
        public Destination Destination1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Destination>("FlightDBModel.FK_Route_Destination1", "Destination").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Destination>("FlightDBModel.FK_Route_Destination1", "Destination").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Destination> Destination1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Destination>("FlightDBModel.FK_Route_Destination1", "Destination");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Destination>("FlightDBModel.FK_Route_Destination1", "Destination", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlightDBModel", "FK_Route_Flight", "Flight")]
        public Flight Flight
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flight>("FlightDBModel.FK_Route_Flight", "Flight").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flight>("FlightDBModel.FK_Route_Flight", "Flight").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Flight> FlightReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flight>("FlightDBModel.FK_Route_Flight", "Flight");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Flight>("FlightDBModel.FK_Route_Flight", "Flight", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlightDBModel", "FK_Reservation_Route", "Reservation")]
        public EntityCollection<Reservation> Reservations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reservation>("FlightDBModel.FK_Reservation_Route", "Reservation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reservation>("FlightDBModel.FK_Reservation_Route", "Reservation", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
